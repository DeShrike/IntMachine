// This is a comment

IMPORT std.iasm

DATA

Number1: 7, word[1]
Number2: 6, word[1]
Sum:     0, word[1]
Counter: 0, byte[1]
String1: "This is a string", string[30]
Stack:   0, word[128]

CODE

MOV SP, Stack           // Initialize SP

MOV AX, Number1			// Load address of Number1 in AX
MOV CX, [AX]            // Load value of Number1 in CX

MOV AX, Number2			// Load address of Number2 in AX
MOV DX, [AX]            // Load value of Number2 in DX

MOV AX, 0				// Init AX

Loop:

ADD AX, CX				// Add CX (Number1) to AX
DEC DX					// Decrease DX by 1

JZ Loop 				// JUMP if not ZERO

MOV	DX, Sum				// Store address of Sum in DX
STOR AX, [DX]           // Store value of AX in memory location of Sum

HLT
