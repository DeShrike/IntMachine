// This programs adds 2 numbers:
// Sum = Number1 + Number 2

// And then calculates a Factorial
// Result = Factorial(Input)

IMPORT Lib.iasm

DATA

Number1: 7, word[1]
Number2: 6, word[1]
Sum:     0, word[1]

String1: "This is a string", string[30]

Input:   7, byte[1]
Result:  0, word[1]

Stack:   0x5555, word[32]

CODE

Main:

MOV AX, Number1			// Load address of Number1 in AX
MOV CX, [AX]            // Load value of Number1 in CX

MOV AX, Number2			// Load address of Number2 in AX
MOV DX, [AX]            // Load value of Number2 in DX

MOV AX, 0				// Init AX

Loop:

ADD AX, CX				// Add CX (Number1) to AX
DEC DX					// Decrease DX by 1

JZ Loop 				// JUMP if not ZERO

MOV	DX, Sum				// Store address of Sum in DX
STOR AX, [DX]           // Store value of AX in memory location of Sum

MOV BX, Input			// Load address of Input in BX
MOV AX, [BX]            // Load value of Input in AX

CALL Factorial          // Call Factorial(AX). Result will be in BX

MOV DX, Result          // Load address of Result in DX
STOR BX, [DX]           // Store value of BX in memory location of Result

HLT
